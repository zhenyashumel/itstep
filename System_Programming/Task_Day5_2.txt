Тема; Синхронизация потоков

Задание 1
1. Создать программу из пяти потоков — основного, А, B, C и D: 
1.1.  Основной поток запускает остальные четыре и ожидает их завершения. 
1.2.  Поток A добавляет в список S числа 1, 2, 3 и т. д (интервал 500 ms). 
1.3.  Поток B извлекает из списка S  последний элемент, возводит его в квадрат 
и помещает в список R. Если в списке S  нет элементов,  поток B ожидает одну секунду. 
1.4.  Поток C извлекает из списка S последний элемент, делит его на 3 и помещает 
в список R. Если в списке S нет элементов, поток C ожидает одну секунду. 
1.5.  Поток D извлекает из списка R  последний  элемент и печатает его. Если 
в списке R  нет элементов,  поток D печатает сообщение об этом и ожидает одну секунду. 
2. Обеспечить корректную синхронизацию потоков. 
2.1 Каждое обращение к спискам S и R из любого потока защитить критической 
серкций(одна для списка S, другая — для списка R). 
3.  Спровоцировать взаимоблокировку вследствие состязания. 
3.1.  Изменить алгоритм потока B на следующий: 
1)  вход в критическую секцию для списка S, вход в критическую секцию для списка R; 
2)  извлечение элемента из S, вычисление, добавление элемента в R; 
3)  выход из критической секции для списка R, выход из критической секции для списка S. 

Дополнительные задания: 
Задание 1*
Игра DomiNations. 
Заданное количество юнитов добывают золото равными порциями из шахт (количество шахт задается опционально). 
Время добывания золота каждым юнитом явялется случайным. Работа юнитов производится до истощения шахты. 
Работа каждого юнита реализуется в новом потоке. 
Спроектировать классы (юнит, шахта и другие необходимые классы).

Задание 2*
Противостояние нескольких команд (количество команд задается опционально, но не менее одной).
Каждая команда имеет случайное количество бойцов и в битве убивает случайное количество бойцов противника.
Борьба команд реалилизуется в виде однократнй битвы
Борьба каждой пары команд реализуется в отдельном потоке.

Задание 3*
Авиаразведка. Создается условная карта в виде матрицы, размерность которой определяет 
размер карты, содержащей произвольное количество единиц (целей) в произвольных 
ячейках. Из произвольной точки карты стартуют несколько разведчиков (потоков), курсы 
которых выбираются так, чтобы покрыть максимальную площадь карты. Каждый 
разведчик фиксирует цели, чьи координаты совпадают с его координатами и по 
достижении границ карты сообщает количество обнаруженных целей. 







